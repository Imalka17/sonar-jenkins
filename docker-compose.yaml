version: "3.2"
 
services:
   jenkins:
      #  image: jenkins/jenkins:lts
       build:
        context: ./jenkins
       container_name: jenkins-container
       privileged: true
       user: root
       restart: always
       ports:
           - "8080:8080/tcp"
           - '50000:50000/tcp'
       volumes:
       - '/var/run/docker.sock:/var/run/docker.sock'
       - '/data/jenkins/jenkins_home:/var/jenkins_home'
       environment:
       - "JENKINS_OPTS=--prefix=/jenkins"
       - "JAVA_OPTS=-Djenkins.install.runSetupWizard=false"

   sonarqube:
       image: sonarqube:9.5-community # https://www.sonarqube.org/features/deployment/
       container_name: sonar-container
       restart: always
       ulimits: # vm.max_map_count: 262144
        nofile:
          soft: 65536
          hard: 65536
       networks:
           - sonarnet
       environment:
           - SONARQUBE_JDBC_USERNAME=sonar
           - SONARQUBE_JDBC_PASSWORD="P@$sw0rd"
           - SONARQUBE_JDBC_URL=jdbc:postgresql://postgressdb:5432/sonarqube
       ports:
       - "9000:9000"
       - "9092:9092"
       volumes:
       - '/data/sonar/sonarqube_conf:/opt/sonarqube/conf'
       - '/data/sonar/sonarqube_data:/opt/sonarqube/data'
       - '/data/sonar/sonarqube_extensions:/opt/sonarqube/extensions'
       - '/data/sonar/sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins'
  
   postgressdb:
       image: postgres:latest # https://hub.docker.com/_/postgres?tab=tags
       container_name: postgres-container
       restart: always
       ulimits: # vm.max_map_count: 262144
        nofile:
          soft: 65536
          hard: 65536
       networks:
           - sonarnet
       environment:
           - POSTGRES_USER=sonar
           - POSTGRES_PASSWORD="P@$sw0rd"
           - POSTGRES_DB=sonarqube
       volumes:
       - '/data/postgresql/sonarqube_db:/var/lib/postgresql'
       - '/data/postgresql/postgresql_data:/var/lib/postgresql/data'
 
networks:
   sonarnet:
    driver: bridge

  